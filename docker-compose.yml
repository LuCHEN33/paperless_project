version: '3'

services:
  nginx:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: paperless-ui
    ports:
      - "8080:80"


  spring-app:
    build:
      context: .
      dockerfile: Dockerfile_API
    container_name: springboot-api
    platform: linux/amd64
    ports:
      - "8081:8081"
    depends_on:
      minio:
        condition: service_started
      rabbitmq:
        condition: service_started
      paperless-db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      # SPRING_PROFILES_ACTIVE=docker
      MINIO_URL: http://minio:9000
      ELASTICSEARCH_HOST: elasticsearch


  paperless-db:
    image: postgres:latest
    container_name: paperless-db
    ports:
      - "5432:5432"
    environment:
        POSTGRES_USER: 'paperless'
        POSTGRES_PASSWORD: 'paperless'
        POSTGRES_DB: 'paperless'
    volumes:
      - paperless-db-data:/var/lib/postgresql/data
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql

    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "paperless" ]
      interval: 10s
      timeout: 5s
      retries: 20


  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: 'rabbitmq'
    ports:
       - "5672:5672"
       - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-log:/var/log/rabbitmq
      - ./init/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./init/definitions.json:/etc/rabbitmq/definitions.json


  minio:
    image: minio/minio
    container_name: 'minio'
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ACCESS_KEY: "minio_user"
      MINIO_SECRET_KEY: "minio_password"
      MINIO_URL: http://minio:9000
    command: server /data --console-address ":9090"
    volumes:
      - minio_data:/data


  ocrworker:
    container_name: 'ocrworker'
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile_API
    image: paperless-ocrworker:latest
    ports:
      - "8082:8082"
    environment:
      TESSERACT_PATH: /usr/share/tessdata
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: admin
      MINIO_URL: http://minio:9000
      ELASTICSEARCH_HOST: elasticsearch
    depends_on:
      rabbitmq:
        condition: service_started
      minio:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      spring-app:
        condition: service_started
      paperless-db:
        condition: service_healthy


  elasticsearch:
    image: elasticsearch:8.7.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
      - "xpack.security.enrollment.enabled=false"
      - ELASTIC_PASSWORD=search_password
    ports:
      - 9200:9200
      - 9300:9300

    healthcheck:
      interval: 10s
      retries: 80
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:9200/

  kibana:
    image: docker.elastic.co/kibana/kibana:8.2.3
    ports:
      - 5601:5601

volumes:
  paperless-db-data:
  rabbitmq-data:
  rabbitmq-log:
  minio_data:
  elasticsearch_data: